//--------------------------------------------------------------------------------
// Auto-generated by Migen (--------) & LiteX (2c4b8963) on 2020-03-17 21:32:20
//--------------------------------------------------------------------------------
#include <generated/soc.h>
#ifndef __GENERATED_CSR_H
#define __GENERATED_CSR_H
#include <stdint.h>
#ifdef CSR_ACCESSORS_DEFINED
extern void csr_write_simple(unsigned long v, unsigned long a);
extern unsigned long csr_read_simple(unsigned long a);
#else /* ! CSR_ACCESSORS_DEFINED */
#include <hw/common.h>
#endif /* ! CSR_ACCESSORS_DEFINED */

/* ctrl */
#define CSR_CTRL_BASE 0x82000000L
#define CSR_CTRL_RESET_ADDR 0x82000000L
#define CSR_CTRL_RESET_SIZE 1
static inline uint8_t ctrl_reset_read(void) {
	return csr_read_simple(0x82000000L);
}
static inline void ctrl_reset_write(uint8_t v) {
	csr_write_simple(v, 0x82000000L);
}
#define CSR_CTRL_SCRATCH_ADDR 0x82000004L
#define CSR_CTRL_SCRATCH_SIZE 4
static inline uint32_t ctrl_scratch_read(void) {
	uint32_t r = csr_read_simple(0x82000004L);
	r <<= 8;
	r |= csr_read_simple(0x82000008L);
	r <<= 8;
	r |= csr_read_simple(0x8200000cL);
	r <<= 8;
	r |= csr_read_simple(0x82000010L);
	return r;
}
static inline void ctrl_scratch_write(uint32_t v) {
	csr_write_simple(v >> 24, 0x82000004L);
	csr_write_simple(v >> 16, 0x82000008L);
	csr_write_simple(v >> 8, 0x8200000cL);
	csr_write_simple(v, 0x82000010L);
}
#define CSR_CTRL_BUS_ERRORS_ADDR 0x82000014L
#define CSR_CTRL_BUS_ERRORS_SIZE 4
static inline uint32_t ctrl_bus_errors_read(void) {
	uint32_t r = csr_read_simple(0x82000014L);
	r <<= 8;
	r |= csr_read_simple(0x82000018L);
	r <<= 8;
	r |= csr_read_simple(0x8200001cL);
	r <<= 8;
	r |= csr_read_simple(0x82000020L);
	return r;
}

/* ethphy */
#define CSR_ETHPHY_BASE 0x82000800L
#define CSR_ETHPHY_CRG_RESET_ADDR 0x82000800L
#define CSR_ETHPHY_CRG_RESET_SIZE 1
static inline uint8_t ethphy_crg_reset_read(void) {
	return csr_read_simple(0x82000800L);
}
static inline void ethphy_crg_reset_write(uint8_t v) {
	csr_write_simple(v, 0x82000800L);
}
#define CSR_ETHPHY_MDIO_W_ADDR 0x82000804L
#define CSR_ETHPHY_MDIO_W_SIZE 1
static inline uint8_t ethphy_mdio_w_read(void) {
	return csr_read_simple(0x82000804L);
}
static inline void ethphy_mdio_w_write(uint8_t v) {
	csr_write_simple(v, 0x82000804L);
}
#define CSR_ETHPHY_MDIO_W_MDC_OFFSET 0
#define CSR_ETHPHY_MDIO_W_MDC_SIZE 1
#define CSR_ETHPHY_MDIO_W_OE_OFFSET 1
#define CSR_ETHPHY_MDIO_W_OE_SIZE 1
#define CSR_ETHPHY_MDIO_W_W_OFFSET 2
#define CSR_ETHPHY_MDIO_W_W_SIZE 1
#define CSR_ETHPHY_MDIO_R_ADDR 0x82000808L
#define CSR_ETHPHY_MDIO_R_SIZE 1
static inline uint8_t ethphy_mdio_r_read(void) {
	return csr_read_simple(0x82000808L);
}
#define CSR_ETHPHY_MDIO_R_R_OFFSET 0
#define CSR_ETHPHY_MDIO_R_R_SIZE 1

#endif
